stages:
  - build
  - test
  - docs
  - release

image: 'rust:latest'

cache:
  paths:
    - .cargo/

before_script:
  - export CARGO_HOME=${CI_PROJECT_DIR}/.cargo
  - wget -o /dev/null https://github.com/mozilla/sccache/releases/download/0.2.13/sccache-0.2.13-x86_64-unknown-linux-musl.tar.gz
  - tar -xzf sccache-0.2.13-x86_64-unknown-linux-musl.tar.gz
  - export RUSTC_WRAPPER=${CI_PROJECT_DIR}/sccache-0.2.13-x86_64-unknown-linux-musl/sccache
  - export SCCACHE_DIR=${CI_PROJECT_DIR}/.cargo/sccache
  - rustc --version
  - cargo --version

default:
  tags:
    - linux
    - docker

build:
  stage: build
  script:
    - cargo build

warnings:
  stage: test
  script:
    - rustup toolchain install nightly --component clippy --no-self-update
    - cargo +nightly clippy -- -D warnings
  allow_failure: true

formatting:
  stage: test
  script:
    - rustup toolchain install nightly --component rustfmt --no-self-update
    - cargo +nightly fmt -- --check

docs:
  stage: docs
  except:
    - master
  script:
    - cargo doc --no-deps
  artifacts:
    paths:
      - target/doc
    expire_in: 7 days

pages:
  stage: docs
  only:
    - master
  script:
    - cargo doc --no-deps
    - mv target/doc public
    - echo '<meta http-equiv="refresh" content="0; url=namib_shared/index.html">' > public/index.html
  artifacts:
    paths:
      - public
    expire_in: 7 days

tag:
  stage: release
  only:
    - master
  script:
    - cargo generate-lockfile
    - "export PACKAGE_VERSION=$(cargo pkgid | cut -d# -f2 | cut -d: -f2)"
    - git remote add api-origin https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.informatik.uni-bremen.de/${CI_PROJECT_PATH}
    - git tag $PACKAGE_VERSION
    - git push api-origin $PACKAGE_VERSION