include:
  - local: /////.common.yml

enf:openwrt-image_x86_64_21.02:
  extends: .enf:openwrt_image_base
  image: openwrtorg/imagebuilder:x86-64-21.02.3 # - unlike the sdk, "-" is used instead of "_" here...
  needs:
    - enf:openwrt-package_x86_64_21.02

enf:openwrt-image_bcm2708_21.02:
  extends: .enf:openwrt_image_base
  image: openwrtorg/imagebuilder:bcm27xx-bcm2708-21.02.3 # rpi 1
  needs:
    - enf:openwrt-package_bcm2708_21.02
  variables:
    PROFILE: rpi

enf:openwrt-image_bcm2710_21.02:
  extends: .enf:openwrt_image_base
  image: openwrtorg/imagebuilder:bcm27xx-bcm2710-21.02.3 # rpi 3
  needs:
    - enf:openwrt-package_bcm2710_21.02
  variables:
    PROFILE: rpi-3

enf:openwrt-image_bcm2711_21.02:
  extends: .enf:openwrt_image_base
  image: openwrtorg/imagebuilder:bcm27xx-bcm2711-21.02.3 # rpi 4
  needs:
    - enf:openwrt-package_bcm2711_21.02
  variables:
    PROFILE: rpi-4

enf:openwrt-image_x86_64_22.03:
  extends: .enf:openwrt_image_base
  image: openwrtorg/imagebuilder:x86-64-22.03-SNAPSHOT # - unlike the sdk, "-" is used instead of "_" here...
  needs:
    - enf:openwrt-package_x86_64_22.03

enf:openwrt-image_bcm2708_22.03:
  extends: .enf:openwrt_image_base
  image: openwrtorg/imagebuilder:bcm27xx-bcm2708-22.03-SNAPSHOT # rpi 1
  needs:
    - enf:openwrt-package_bcm2708_22.03
  variables:
    PROFILE: rpi

enf:openwrt-image_bcm2710_22.03:
  extends: .enf:openwrt_image_base
  image: openwrtorg/imagebuilder:bcm27xx-bcm2710-22.03-SNAPSHOT # rpi 3
  needs:
    - enf:openwrt-package_bcm2710_22.03
  variables:
    PROFILE: rpi-3

enf:openwrt-image_bcm2711_22.03:
  extends: .enf:openwrt_image_base
  image: openwrtorg/imagebuilder:bcm27xx-bcm2711-22.03-SNAPSHOT # rpi 4
  needs:
    - enf:openwrt-package_bcm2711_22.03
  variables:
    PROFILE: rpi-4

.enf:openwrt_image_base:
  stage: image
  rules:
    - !reference [.on_tags]
    - !reference [.on_default_branch]
    - !reference [.allow_manual_run]
  script:
    - cd /home/build/openwrt
    - cp -r "${CI_PROJECT_DIR}/namib_enforcer/openwrt/image/files" files
    # copy the IPKs created by the needed build jobs
    - mkdir -p packages
    - cp ${CI_PROJECT_DIR}/output/dnsmasq-full_*.ipk packages/
    - cp ${CI_PROJECT_DIR}/output/namib_*.ipk packages/
    - grep imagebuilder repositories.conf || echo "src imagebuilder file:packages" >> repositories.conf
    - make _check_keys package_index || true # this is necessary for snapshot
    # build the openwrt image with our packages
    - make image PROFILE=$PROFILE PACKAGES="dnsmasq-full namib luci nano -dnsmasq -odhcpd-ipv6only $EXTRA_PACKAGES" FILES=files
    - mkdir ${CI_PROJECT_DIR}/image
    # x86 puts it under bin, bcm under build_dir ...
    - mv bin/targets/*/*/openwrt-*-combined-*.img.gz "${CI_PROJECT_DIR}/image" || true
    - mv build_dir/target-*/linux-*/tmp/openwrt-*-factory.img.gz "${CI_PROJECT_DIR}/image" || true
    - mv build_dir/target-x86_64_musl/root-x86 "${CI_PROJECT_DIR}/rootfs" || true
  artifacts:
    paths:
      - image
      - rootfs


enf:openwrt-docker:
  stage: image
  tags:
    - docker
    - unprivileged
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  rules:
    - !reference [.on_default_branch]
  needs:
    - enf:openwrt-package_x86_64_21.02
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --cache=true --context "$CI_PROJECT_DIR" --dockerfile "$CI_PROJECT_DIR/namib_enforcer/openwrt/image/Dockerfile" --whitelist-var-run=false --destination "$CI_REGISTRY_IMAGE/enforcer:latest"
